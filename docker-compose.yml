version: "3.7"

services:
  frontend:
    container_name: "frontend-portfolio-${ENV_NAME}"
    image: "frontend-portfolio-${ENV_NAME}:${VERSION}"
    restart: "unless-stopped"
    build:
      context: "."
      dockerfile: "frontend/Dockerfile"
      target: "development"
    command: "npm run start"
    volumes:
      - "./frontend:/app:rw"
    env_file:
      - "./backend/env/.env.${ENV_NAME}"
    ports:
      - ${FRONTEND_PORT}
    depends_on:
      - "backend"
    networks:
      - "nginx-proxy-manager_default"
      - "backend_net"

  backend:
    container_name: "backend-portfolio-${ENV_NAME}"
    image: "backend-portfolio-${ENV_NAME}:${VERSION}"
    restart: "unless-stopped"
    build:
      context: "."
      dockerfile: "backend/Dockerfile"
      target: "development"
    command: "npm run start"
    volumes:
      - "./backend/src:/app/src:rw"
    env_file:
      - "./backend/env/.env.${ENV_NAME}"
    ports:
      - ${BACKEND_PORT}
    depends_on:
      - "redis"
      - "mongo"
    networks:
      - "redis_net"
      - "mongo_net"
      - "nginx-proxy-manager_default"
      - "backend_net"

  redis:
    container_name: "redis"
    image: "redis:latest"
    hostname: "redis"
    restart: "unless-stopped"
    ports:
      - "6379:6379"
    networks:
      - "redis_net"

  mongo:
    container_name: "mongodb"
    hostname: "mongodb"
    image: "mongo:latest"
    restart: "unless-stopped"
    ports:
      - "27017:27017"
    networks:
      - "mongo_net"

networks:
  redis_net:
  mongo_net:
  backend_net:
    name: "backend_net_${ENV_NAME}"
    driver: "bridge"
  nginx-proxy-manager_default:
    external: true
