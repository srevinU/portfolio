version: "3.1"

services:
  proxy:
    restart: "always"
    build:
      context: "."
      dockerfile: "nginx/Dockerfile"
      target: "development"
    env_file:
      - "./nginx/.env"
    ports:
      - "8080:80"
    depends_on:
      - frontend
    networks:
      - proxy_net

  frontend:
    container_name: "frontend"
    restart: "always"
    build:
      context: "."
      dockerfile: "frontend/Dockerfile"
      target: "development"
    command: "npm run start"
    volumes:
      - "./frontend:/app:rw"
    env_file:
      - "./frontend/.env"
    ports:
      - "3000"
    depends_on:
      - backend
    networks:
      - proxy_net

  backend:
    container_name: "backend"
    restart: "always"
    build:
      context: "."
      dockerfile: "backend/Dockerfile"
      target: "development"
    command: "npm run start"
    volumes:
      - "./backend/src:/app/src:rw"
    env_file:
      - "./backend/.env"
    ports:
      - "3001"
    depends_on:
      - redis
      - mongo
    networks:
      - redis_net
      - mongo_net
      - proxy_net

  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - 6379:6379
    networks:
      - redis_net

  mongo:
    container_name: mongodb
    image: mongo:latest
    restart: always
    ports:
      - 27017:27017
    networks:
      - mongo_net

networks:
  redis_net:
  mongo_net:
  backend_net:
  frontend_net:
  proxy_net:
